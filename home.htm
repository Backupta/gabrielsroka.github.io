<!doctype html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>My Apps</title>
<link href="https://ok1static.oktacdn.com/assets/css/widgets/chosen.css" type="text/css" rel="stylesheet"/>
<link href="https://ok1static.oktacdn.com/assets/css/widgets/jquery.qtip.css" type="text/css" rel="stylesheet"/>

<!-- Latest CDN production Javascript and CSS: 2.11.0 -->
<script
  src="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.11.0/js/okta-sign-in.min.js"
  type="text/javascript"></script>
<link
  href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.11.0/css/okta-sign-in.min.css"
  type="text/css"
  rel="stylesheet"/>

<!-- Theme file: Customize or replace this file if you want to override our default styles -->
<link
  href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.11.0/css/okta-theme.css"
  type="text/css"
  rel="stylesheet"/>    
<style type="text/css">
.app-button .logo {
    visibility: visible;
}
</style>
</head>
<body>
<div id="app"></div>
<div id="okta-login-container"></div>
<script>
/*
see:
http://developer.okta.com/code/javascript/okta_sign-in_widget
https://github.com/okta/okta-signin-widget
*/

var baseUrl = 'https://gsroka-neto.oktapreview.com';
var init = {credentials: 'include'}; // For this work, enable CORS in Okta.
// var init = {mode: 'cors'}; // this didn't seem to work.

var app = document.getElementById("app");
fetch(`${baseUrl}/api/v1/users/me/appLinks`, init)
.then(response => response.json())
.then(links => {
    var html = "<link href='https://ok1static.oktacdn.com/assets/css/enduser/enduser.css' type='text/css' rel='stylesheet'/><ul>";
    links.sort((link1, link2) => link1.sortOrder < link2.sortOrder ? -1 : 1)
    .forEach(link => html += `<li class='app-button-wrapper'>
        <a href='${link.linkUrl}' target='_blank' class='app-button'><img src='${link.logoUrl}' class='logo'/></a>
        <p class='app-button-name'>${link.label}`);
    html += "</ul>";
    app.innerHTML = html;
}).catch(error => {
    var config = {
      baseUrl: baseUrl
    };
    var signIn = new OktaSignIn(config);
    signIn.renderEl(
      { el: '#okta-login-container' },
      function (res) {
        if (res.status === 'SUCCESS') {
          console.log('User %s succesfully authenticated %o', res.user.profile.login, res.user);
          res.session.setCookieAndRedirect(location.href);
        } else {
          console.log(res.status);
        }
      },
      function (err) {
        // The widget will handle most types of errors - for example, if the user
        // enters an invalid password or there are issues authenticating.
        //
        // This function is invoked with errors the widget cannot recover from:
        // 1. Known errors: CONFIG_ERROR, UNSUPPORTED_BROWSER_ERROR, OAUTH_ERROR
        // 2. Uncaught exceptions
        console.log(err);
      }
    );
});
</script>
</body>
</html>
